name: Update Formula

on:
  repository_dispatch:
    types: [new-release]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update to (e.g., v0.0.3)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Download and update formula
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo "Updating formula to version: $VERSION"
          
          # Download binaries with error checking
          echo "Downloading binaries..."
          curl -L -f -o pyinit-darwin-amd64 "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-darwin-amd64" || exit 1
          curl -L -f -o pyinit-darwin-arm64 "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-darwin-arm64" || exit 1
          curl -L -f -o pyinit-linux-amd64 "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-linux-amd64" || exit 1
          
          # Verify downloads
          ls -la pyinit-*
          file pyinit-*
          
          # Calculate SHA256 checksums
          DARWIN_AMD64_SHA=$(sha256sum pyinit-darwin-amd64 | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(sha256sum pyinit-darwin-arm64 | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(sha256sum pyinit-linux-amd64 | cut -d' ' -f1)
          
          echo "Darwin AMD64 SHA: $DARWIN_AMD64_SHA"
          echo "Darwin ARM64 SHA: $DARWIN_ARM64_SHA"
          echo "Linux AMD64 SHA: $LINUX_AMD64_SHA"
          
          # Verify checksums are different
          if [ "$DARWIN_AMD64_SHA" = "$DARWIN_ARM64_SHA" ] || [ "$DARWIN_AMD64_SHA" = "$LINUX_AMD64_SHA" ]; then
            echo "Error: SHA256 values are identical, indicating download issues"
            exit 1
          fi
          
          # Create new formula content
          cat > Formula/pyinit.rb << EOF
          class Pyinit < Formula
            desc "Interactive Python project scaffolding tool"
            homepage "https://github.com/Pradyothsp/pyinit"
            version "${VERSION#v}"

            on_macos do
              if Hardware::CPU.intel?
                url "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-darwin-amd64"
                sha256 "$DARWIN_AMD64_SHA"
              end
              if Hardware::CPU.arm?
                url "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-darwin-arm64"
                sha256 "$DARWIN_ARM64_SHA"
              end
            end

            on_linux do
              if Hardware::CPU.intel?
                url "https://github.com/Pradyothsp/pyinit/releases/download/$VERSION/pyinit-linux-amd64"
                sha256 "$LINUX_AMD64_SHA"
              end
            end

            def install
              bin.install "pyinit-darwin-amd64" => "pyinit" if OS.mac? && Hardware::CPU.intel?
              bin.install "pyinit-darwin-arm64" => "pyinit" if OS.mac? && Hardware::CPU.arm?
              bin.install "pyinit-linux-amd64" => "pyinit" if OS.linux? && Hardware::CPU.intel?
            end
          end
          EOF

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Formula/pyinit.rb
          git commit -m "Update formula to ${{ steps.version.outputs.version }}"
          git push